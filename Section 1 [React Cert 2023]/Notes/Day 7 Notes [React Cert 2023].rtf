{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red141\green0\blue24;\red255\green255\blue255;\red13\green14\blue17;
\red5\green25\blue80;\red5\green40\blue131;\red78\green16\blue174;\red9\green61\blue20;\red70\green137\blue204;
\red212\green212\blue212;\red203\green139\blue114;\red13\green14\blue17;\red5\green25\blue80;}
{\*\expandedcolortbl;;\cssrgb\c62745\c6667\c12157;\cssrgb\c100000\c100000\c100000;\cssrgb\c5490\c6667\c8627;
\cssrgb\c1176\c14510\c38824;\cssrgb\c784\c23137\c58431;\cssrgb\c38431\c17255\c73725;\cssrgb\c784\c29804\c10196;\cssrgb\c33725\c61176\c83922;
\cssrgb\c86275\c86275\c86275;\cssrgb\c83922\c61569\c52157;\cssrgb\c5490\c6667\c8627;\cssrgb\c1176\c14510\c38824;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid2\'01\'01;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww12820\viewh15400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc\partightenfactor0

\f0\b\fs30 \cf0 Day 7 Notes [React Cert 2023]
\f1\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\ul React Router\ulnone \
react-router requires installing react-router-dom\
npm i react-router-dom\
React Native (mobile dev) requires react-router-native instead\
\
Need to wrap app in <BrowserRouter> tag\
\
index.js:\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \cb3 \strokec4  \{BrowserRouter\}\cf2 \cb3 \strokec2  from\cf4 \cb3 \strokec4  \cf5 \cb3 \strokec5 'react-router-dom'\cf4 \cb3 \strokec4 ;\cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 const\cf6 \strokec6  root\cf2 \strokec2  =\cf4 \cb3 \strokec4  ReactDOM\cf2 \cb3 \strokec2 .\cf7 \strokec7 createRoot\cf4 \cb3 \strokec4 (\cf6 \cb3 \strokec6 document\cf2 \strokec2 .\cf7 \strokec7 getElementById\cf4 \cb3 \strokec4 (\cf5 \cb3 \strokec5 'root'\cf4 \cb3 \strokec4 ));\cb1 \
\cf6 \cb3 \strokec6 root\cf2 \strokec2 .\cf7 \strokec7 render\cf4 \cb3 \strokec4 (\cb1 \
\cb3   <\cf8 \cb3 \strokec8 React.StrictMode\cf4 \cb3 \strokec4 >\cb1 \
\cb3     <\cf8 \cb3 \strokec8 BrowserRouter\cf4 \cb3 \strokec4 >\cb1 \
\cb3       <\cf8 \cb3 \strokec8 App\cf4 \cb3 \strokec4  />\cb1 \
\cb3     </\cf8 \cb3 \strokec8 BrowserRouter\cf4 \cb3 \strokec4 >\cb1 \
\cb3   </\cf8 \cb3 \strokec8 React.StrictMode\cf4 \cb3 \strokec4 >\cb1 \
\cb3 );\cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
index.html has div tag with id of root to load React root component\
\
From class README:\
\pard\pardeftab720\partightenfactor0
\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \'93Once you have this library there are three things you need to do in order to use React Router.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Setup your router\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Define your routes\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Handle navigation\
\ls1\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\tx720\tx1440\pardeftab720\partightenfactor0
\cf4 \
\pard\pardeftab720\partightenfactor0
\cf4 \strokec4 OPTIONAL - You might also see in other applications that use React Router, on the\'a0index.js\'a0they are not wrapping the\'a0App\'a0component in the\'a0BrowserRouter\'a0component. This can happen, but on\'a0App.js\'a0this is an example of how it would be imported:\
\pard\pardeftab720\partightenfactor0
\cf9 \strokec9 import\cf4 \strokec4  \{ \cf10 \strokec10 BrowserRouter\cf4 \strokec4  \cf9 \strokec9 as\cf4 \strokec4  \cf10 \strokec10 Router\cf4 \strokec4 , \cf10 \strokec10 Switch\cf4 \strokec4 , \cf10 \strokec10 Route\cf4 \strokec4  \} \cf9 \strokec9 from\cf4 \strokec4  \cf11 \strokec11 'react-router-dom'\cf4 \strokec4 ;\
Then if you render everything in a wrapped\'a0<Router></Router>\'a0component, this will produce the same effect. Both methods work fine, and it is up to you how you want to apply it. For the rest of this lesson however, we would be going with the first method shown where\'a0BrowserRouter\'a0wraps the\'a0App\'a0component on\'a0index.js\'94\
\
Everything on inside of Routes tag is Route definitions for URL paths\
Each Route takes a path & an element\
\
Link works like an <a/> tag use to attr instead of href\
\
<nav/> will always render the same regardless of route if it is outside the Routes tag\
What is inside the <Routes/> tag will not change when route changes\
Routing is thus still useful on single page apps. Page doesn\'92t refresh, but components are switched out so it appears different.\
\
Check react.dev docs on Routing, Next.js?\
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \ul \ulc4 \strokec4 Dynamic Routes\cf4 \ulnone \strokec4 \
If something exists, create a route to it (e.g., if a subreddit exists, be able to route to it); otherwise load a general custom \'93could not be found\'94/error/404 component\
\pard\pardeftab720\partightenfactor0
\cf12 \outl0\strokewidth0 Component will render based on the dynamic parameter\
Allows you to define one route, but make it look different depending on the params passed\
\pard\pardeftab720\partightenfactor0
\cf4 \outl0\strokewidth0 \strokec4 \
App.js\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 <\cf8 \cb3 \strokec8 Route\cf4 \cb3 \strokec4  \cf6 \strokec6 path\cf2 \strokec2 =\cf5 \strokec5 "/games/:id"\cf4 \strokec4  \cf6 \strokec6 element\cf2 \strokec2 =\{\cf4 \strokec4 <\cf8 \cb3 \strokec8 Game\cf4 \cb3 \strokec4  />\cf2 \strokec2 \}\cf4 \strokec4  />\
\cb1 \
Need to import useParams from \'91react-router-dom\'92 in Game.js\
\
\pard\pardeftab720\partightenfactor0
\cf12 \outl0\strokewidth0 Game.js\cf4 \outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \{ useParams \}\cf2 \strokec2  from\cf4 \strokec4  \cf5 \strokec5 'react-router-dom'\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 const\cf4 \strokec4  \{ \cf6 \strokec6 id\cf4 \strokec4  \}\cf2 \strokec2  =\cf4 \strokec4  \cf7 \strokec7 useParams\cf4 \strokec4 ();\cb1 \
	This standard uses syntax for custom hook\
\
Call param same name as what it is called on Route\
One component that is changing based on params data passed to it\
Referencing it in JSX:\
\cb3 	<\cf8 \cb3 \strokec8 h1\cf4 \cb3 \strokec4 >This is info for the game \cf2 \strokec2 \{\cf6 \strokec6 id\cf2 \strokec2 \}\cf4 \strokec4 </\cf8 \cb3 \strokec8 h1\cf4 \cb3 \strokec4 >\
\cb1 Will display what the id is, in this case, what is after \'93games/\'93 in the URL\
Test it by typing in whatever id you want into the URL (can be handled different, this is for learning/testing)\
Useful for user pages/profiles url.com/user/username\
\
\
*Can you have a custom component to handle all Routing code & import that into App, or must work be done at App.js level?\
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \ul \ulc4 \strokec4 Handling User Input\cf4 \ulnone \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 <\cf8 \cb3 \strokec8 Route\cf4 \cb3 \strokec4  \cf6 \strokec6 path\cf2 \strokec2 =\cf5 \strokec5 "/games/new"\cf4 \strokec4  \cf6 \strokec6 element\cf2 \strokec2 =\{\cf4 \strokec4 <\cf8 \cb3 \strokec8 NewGame\cf4 \cb3 \strokec4  />\cf2 \strokec2 \}\cf4 \strokec4  />\cb1 \
\pard\pardeftab720\partightenfactor0
\cf12 \outl0\strokewidth0 define the specific parameter \'93new\'94; otherwise if the app sees \cf13 \cb3 "/games/new"\cf12   in the URL, it\cf4 \cb1 \outl0\strokewidth0 \strokec4  will think there is a dynamic parameter with input of \'93new\'94\
If you want to display this route on the UI instead of accessing it via a URL, you need a <Link/> element\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 <\cf8 \cb3 \strokec8 Link\cf4 \cb3 \strokec4  \cf6 \strokec6 to\cf2 \strokec2 =\cf5 \strokec5 "/games/new"\cf4 \strokec4 >New Game</\cf8 \cb3 \strokec8 Link\cf4 \cb3 \strokec4 >\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \
Order no longer matters when listing Route definitions (it used to, but now it is smarter)\
\pard\pardeftab720\partightenfactor0
\cf4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \ul \ulc4 \strokec4 Error Handling\cf4 \ulnone \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 <\cf8 \cb3 \strokec8 Route\cf4 \cb3 \strokec4  \cf6 \strokec6 path\cf2 \strokec2 =\cf5 \strokec5 "*"\cf4 \strokec4  \cf6 \strokec6 element\cf2 \strokec2 =\{\cf4 \strokec4 <\cf8 \cb3 \strokec8 NotFound\cf4 \cb3 \strokec4  />\cf2 \strokec2 \}\cf4 \strokec4  />\cb1 \
* means anything, so any URL can route to this element to display, e.g., gibberish URL would display not found component\
If a URL is defined as a Route, it will override this to display the correct component; else error & display not found component\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf4 \ul \ulc4 \strokec4 Nesting Routes\cf4 \ulnone \strokec4 \
\
\
\
\cf4 \ul \ulc4 \strokec4 Other\cf4 \ulnone \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf12 \outl0\strokewidth0 DataIsBeautiful subreddit\cf4 \outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \
\pard\tx720\tx1440\pardeftab720\partightenfactor0
\cf4 \strokec4 If a question leads to the next part of the lesson, it\'92s a good question\
}