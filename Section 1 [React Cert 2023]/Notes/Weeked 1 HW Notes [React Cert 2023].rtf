{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;\f4\fnil\fcharset0 HelveticaNeue;\f5\fnil\fcharset0 HelveticaNeue-Bold;
\f6\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red141\green0\blue24;\red255\green255\blue255;\red13\green14\blue17;
\red5\green25\blue80;\red83\green93\blue104;\red13\green14\blue17;\red141\green0\blue24;\red5\green40\blue131;
\red78\green16\blue174;\red5\green25\blue80;\red92\green32\blue1;\red49\green55\blue68;\red135\green143\blue164;
\red26\green29\blue35;\red17\green106\blue147;\red241\green250\blue247;}
{\*\expandedcolortbl;;\cssrgb\c62745\c6667\c12157;\cssrgb\c100000\c100000\c100000;\cssrgb\c5490\c6667\c8627;
\cssrgb\c1176\c14510\c38824;\cssrgb\c40000\c43922\c48235;\cssrgb\c5490\c6667\c8627;\cssrgb\c62745\c6667\c12157;\cssrgb\c784\c23137\c58431;
\cssrgb\c38431\c17255\c73725;\cssrgb\c1176\c14510\c38824;\cssrgb\c43922\c17255\c0;\cssrgb\c25098\c27843\c33725;\cssrgb\c60000\c63137\c70196\c10196;
\cssrgb\c13725\c15294\c18431;\cssrgb\c3137\c49412\c64314;\cssrgb\c95686\c98431\c97647;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww7140\viewh15260\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc\partightenfactor0

\f0\b\fs30 \cf0 Weekend 1 HW Notes [React Cert 2023]
\f1\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\

\f0\b \ul weather-app
\f1\b0 \ulnone \
\
\ul CSS\ulnone \
https://mui.com/core/\
Currently: npm install @mui/material @emotion/react @emotion/styled\
In index.js: \
\pard\pardeftab720\partightenfactor0

\f2 \cf2 \cb3 \expnd0\expndtw0\kerning0
import\cf4  \cf5 'bootstrap/dist/css/bootstrap.css'\cf4 ;\cb1 \
\cf2 \cb3 import\cf4  \cf5 '@mui/material'\cf4 ;\cb1 \
\cf2 \cb3 import\cf4  \cf5 './index.css'\cf4 ;\
\
\
\ul Fix how we get date from data\ulnone \
Currently each item in data.list[] is at a date time that is 3 hours apart.\
We want each day but at the current time.\
24/3 = 8\
So use mod(%) 8\
list[0] is today. list[8] is next day at current time.\
\
// Retrieve every eighth data item\
// If the index is divisible by 8, & the list indices start at 0, every eighth index number will have a remainder of 0 when divided by 8.\
if(i % 8 = 0) \{\
	//pseudocode\
	retrieve list[i];\
\}\
\
better way:\
increment i by 8 in for loop & start at 0. Go for how many days are desired (make this a variable in the future; right now, it will be hard-coded for 4; also API may return a limited amount of data anyway)\
8 is an API-specific number because the API returns 8 sets of data per day.\
i < 8*number of days \
i <= 8*4\
32\
\
Code\
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \outl0\strokewidth0 \strokec6             // Start at 8 because there are 8 data points per day & today is already being displayed.\cf7 \cb1 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3             \cf8 \strokec8 for\cf7 \strokec7 (\cf8 \strokec8 let\cf7 \strokec7  i\cf8 \strokec8 =\cf9 \strokec9 8\cf7 \strokec7 ; i\cf8 \strokec8 <=\cf9 \strokec9 apiDataInterval\cf8 \strokec8 *\cf9 \strokec9 numWeatherBoxes\cf7 \strokec7 ; i\cf8 \strokec8  +=\cf7 \strokec7  \cf9 \strokec9 apiDataInterval\cf7 \strokec7 ) \{\cb1 \
\cb3                 weekArray\cf9 \strokec9 .\cf10 \strokec10 push\cf7 \strokec7 (\{\cb1 \
\cf9 \cb3 \strokec9                     \cf7 \strokec7 dayData\cf9 \strokec9 :\cf7 \strokec7  \{\cb1 \
\cf9 \cb3 \strokec9                         \cf7 \strokec7 weekDay\cf9 \strokec9 :\cf7 \strokec7  \cf10 \strokec10 getDay\cf7 \strokec7 (\cf9 \strokec9 data\cf8 \strokec8 .\cf7 \strokec7 list[i]\cf8 \strokec8 .\cf7 \strokec7 dt_txt),\cb1 \
\cf9 \cb3 \strokec9                         \cf7 \strokec7 temp\cf9 \strokec9 :\cf7 \strokec7  \cf9 \strokec9 data\cf8 \strokec8 .\cf7 \strokec7 list[i]\cf8 \strokec8 .\cf7 \strokec7 main\cf8 \strokec8 .\cf7 \strokec7 temp,\cb1 \
\cf9 \cb3 \strokec9                         \cf7 \strokec7 desc\cf9 \strokec9 :\cf7 \strokec7  \cf9 \strokec9 data\cf8 \strokec8 .\cf7 \strokec7 list[i]\cf8 \strokec8 .\cf7 \strokec7 weather[\cf9 \strokec9 0\cf7 \strokec7 ]\cf8 \strokec8 .\cf7 \strokec7 description,\cb1 \
\cf9 \cb3 \strokec9                         \cf7 \strokec7 img\cf9 \strokec9 :\cf7 \strokec7  \cf9 \strokec9 data\cf8 \strokec8 .\cf7 \strokec7 list[i]\cf8 \strokec8 .\cf7 \strokec7 weather[\cf9 \strokec9 0\cf7 \strokec7 ]\cf8 \strokec8 .\cf7 \strokec7 icon\cb1 \
\cb3                     \}\cb1 \
\cb3                 \});\cb1 \
\cb3                 // \cf9 \strokec9 console\cf8 \strokec8 .\cf10 \strokec10 log\cf7 \strokec7 (\cf11 \strokec11 "Week Array: "\cf8 \strokec8  +\cf7 \strokec7  \cf9 \strokec9 JSON\cf8 \strokec8 .\cf10 \strokec10 stringify\cf7 \strokec7 (weekArray));\cb1 \
\cb3             \}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \outl0\strokewidth0 \
\
\
\
\
\ul Implement getDay(date)\ulnone \
Old\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \outl0\strokewidth0 \strokec7     \cf8 \strokec8 function\cf7 \strokec7  \cf10 \strokec10 getDay\cf7 \strokec7 (\cf12 \strokec12 date\cf7 \strokec7 )\{\cb1 \
\cf8 \cb3 \strokec8         let\cf7 \strokec7  weekday\cf8 \strokec8  =\cf7 \strokec7  [\cf11 \strokec11 "Sunday"\cf7 \strokec7 , \cf11 \strokec11 "Monday"\cf7 \strokec7 , \cf11 \strokec11 "Tuesday"\cf7 \strokec7 , \cf11 \strokec11 "Wednesday"\cf7 \strokec7 , \cf11 \strokec11 "Thursday"\cf7 \strokec7 , \cf11 \strokec11 "Friday"\cf7 \strokec7 , \cf11 \strokec11 "Saturday"\cf7 \strokec7 ];\cb1 \
\
\cf8 \cb3 \strokec8         return\cf7 \strokec7  weekday[\cf9 \strokec9 0\cf7 \strokec7 ];\cb1 \
\cb3     \}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \outl0\strokewidth0 \
\
New\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \outl0\strokewidth0 \strokec6     // Helper function to format day of the week\cf7 \cb1 \strokec7 \
\cf6 \cb3 \strokec6     // Leverage JS Date.getDay()\cf7 \cb1 \strokec7 \
\cf6 \cb3 \strokec6     // Since getDay only works on Date type objects,\cf7 \cb1 \strokec7 \
\cf6 \cb3 \strokec6     // make the date input into a Date object,\cf7 \cb1 \strokec7 \
\cf6 \cb3 \strokec6     // then call getDay() on it.\cf7 \cb1 \strokec7 \
\cf6 \cb3 \strokec6     // Sunday - Saturday : 0 - 6\cf7 \cb1 \strokec7 \
\cf6 \cb3 \strokec6     // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\cf7 \cb1 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3     \cf8 \strokec8 function\cf7 \strokec7  \cf10 \strokec10 getDay\cf7 \strokec7 (\cf12 \strokec12 date\cf7 \strokec7 )\{\cb1 \
\cf8 \cb3 \strokec8         let\cf7 \strokec7  weekday\cf8 \strokec8  =\cf7 \strokec7  [\cf11 \strokec11 "Sunday"\cf7 \strokec7 , \cf11 \strokec11 "Monday"\cf7 \strokec7 , \cf11 \strokec11 "Tuesday"\cf7 \strokec7 , \cf11 \strokec11 "Wednesday"\cf7 \strokec7 , \cf11 \strokec11 "Thursday"\cf7 \strokec7 , \cf11 \strokec11 "Friday"\cf7 \strokec7 , \cf11 \strokec11 "Saturday"\cf7 \strokec7 ];\cb1 \
\
\cf8 \cb3 \strokec8         return\cf7 \strokec7  weekday[\cf8 \strokec8 new\cf7 \strokec7  \cf9 \strokec9 Date\cf7 \strokec7 (\cf12 \strokec12 date\cf7 \strokec7 )\cf8 \strokec8 .\cf10 \strokec10 getDay\cf7 \strokec7 ()];\cb1 \
\cb3     \} \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \outl0\strokewidth0 \
\
\
\
\
\
\ul useEffect\ulnone \
From react.dev:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f3\fs27\fsmilli13600 \cf13 \cb14 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 useEffect
\f4\fs34 \cf15 \cb3 \strokec15  is a Hook, so you can only call it 
\f5\b at the top level of your component
\f4\b0  or your own Hooks. You can\'92t call it inside loops or conditions. If you need that, extract a new component and move the state into it.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0\cf15 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec15 If you\'92re 
\f5\b not trying to synchronize with some external system,
\f4\b0  {\field{\*\fldinst{HYPERLINK "https://react.dev/learn/you-might-not-need-an-effect"}}{\fldrslt \cf16 \strokec16 you probably don\'92t need an Effect.}}\cf16 \strokec16 \'94 \
\pard\tx720\pardeftab720\sa240\partightenfactor0
\cf15 \cb1 \strokec15 \'93\cf15 \cb17 \strokec15 An Effect lets you {\field{\*\fldinst{HYPERLINK "https://react.dev/learn/synchronizing-with-effects"}}{\fldrslt \cf16 \strokec16 keep your component synchronized}} with some external system (like a chat service). Here, 
\f6\i external system
\f4\i0  means any piece of code that\'92s not controlled by React\'94\
\cf15 \cb1 \strokec15 \
\pard\pardeftab720\partightenfactor0

\f2\fs30 \cf4 \cb3 \outl0\strokewidth0 \
\
\
\cb1 \
\pard\pardeftab720\partightenfactor0

\f1 \cf4 \
\ul Next Steps\ulnone \
Master map & spread (\'85)\
\ul \
\
}